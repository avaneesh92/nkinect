language: node_js
os:
  - linux
  - osx
notifications:
  slack: rubeniskov:I82ZGuYOEQrhl29wBbQFEdjP#nkinect
cache:
  bundler: true
  directories:
  - node_modules
  - session
  - vendor
node_js:
  - "v8.0.0"
  - "v7.0.0"
  - "v6.0.0"
  - "v5.0.0"
  - "v4.1.0"
matrix:
  fast_finish: true
before_install:
  - if [ ! -d session ];
        echo "Downloading fakenect sample session";
        wget "https://drive.google.com/uc?export=download&id=0B-npeLS9ojmzSWVnVEZkUnBXaU0" -O - | tar -xz;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        echo "Installing required dependencies for Linux";
        sudo apt-get -qq update;
        sudo apt-get install -y git cmake build-essential libusb-1.0;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        echo "Installing required dependencies for MacOS";
        brew update;
        brew install --force git cmake libusb libtool;
    fi
  - if [ -z $(which freenect-camtest) ]; then
        echo "Installing libfreenect";
        mkdir -p vendor && cd vendor;
        if [ ! -d libfreenect ]; then
            git clone https://github.com/OpenKinect/libfreenect;
        fi;
        cd libfreenect;
        mkdir -p build && cd build;
        if [ ! -f bin/freenect-camtest ]; then
            cmake -L ..;
            make -j$(nproc);
        fi;
        sudo make install
    fi
install:
  - npm install
before_script:
  - npm run build
script:
  - npm test
